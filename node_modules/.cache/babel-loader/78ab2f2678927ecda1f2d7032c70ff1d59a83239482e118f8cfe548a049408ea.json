{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lijec\\\\OneDrive\\\\Desktop\\\\dev-practice\\\\LearnReact\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from '../UI/Card';\nimport \"./Expenses.css\";\nimport ExpensesFilter from './ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Expenses(props) {\n  _s();\n  const [filterYear, setFilterYear] = useState('2023');\n  const filterYearHandler = year => {\n    setFilterYear(year);\n  };\n\n  // const logicFilterHandler = item => {\n  //   if(filterYear === item.date.getFullYear()){\n  //     return <ExpenseItem title={item.title} price={item.price} date={item.date} />\n  //   } else return null\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filterYear,\n      onYearFilter: filterYearHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), props.expenses.filter(item => item.date.getFullYear() === parseInt(filterYear)).map(filtered_item => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: filtered_item.title,\n      price: filtered_item.price,\n      date: filtered_item.date\n    }, filtered_item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n_s(Expenses, \"6pLGTIgHo+3b3+J/hGIcW6k5iVA=\");\n_c = Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filterYear","setFilterYear","filterYearHandler","year","expenses","filter","item","date","getFullYear","parseInt","map","filtered_item","title","price","id"],"sources":["C:/Users/lijec/OneDrive/Desktop/dev-practice/LearnReact/01-starting-setup/src/components/Expenses/Expenses.js"],"sourcesContent":["import { useState } from 'react';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from '../UI/Card';\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from './ExpensesFilter';\r\n\r\nexport default function Expenses(props) {\r\n  const [filterYear, setFilterYear] = useState('2023')\r\n\r\n  const filterYearHandler = year => {\r\n    setFilterYear(year);\r\n  };\r\n\r\n  // const logicFilterHandler = item => {\r\n  //   if(filterYear === item.date.getFullYear()){\r\n  //     return <ExpenseItem title={item.title} price={item.price} date={item.date} />\r\n  //   } else return null\r\n  // };\r\n\r\n  return (\r\n      <Card className='expenses'>\r\n        <ExpensesFilter selected={filterYear} onYearFilter={filterYearHandler} />\r\n        {props.expenses.filter(item => item.date.getFullYear() === parseInt(filterYear)).map((filtered_item) => (\r\n          <ExpenseItem \r\n            key={filtered_item.id} \r\n            title={filtered_item.title} \r\n            price={filtered_item.price} \r\n            date={filtered_item.date} \r\n          />\r\n        ))}\r\n      </Card>\r\n  );\r\n}\r\n\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,gBAAgB;AACvB,OAAOC,cAAc,MAAM,kBAAkB;AAAC;AAE9C,eAAe,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EAEpD,MAAMQ,iBAAiB,GAAGC,IAAI,IAAI;IAChCF,aAAa,CAACE,IAAI,CAAC;EACrB,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAEA,oBACI,QAAC,IAAI;IAAC,SAAS,EAAC,UAAU;IAAA,wBACxB,QAAC,cAAc;MAAC,QAAQ,EAAEH,UAAW;MAAC,YAAY,EAAEE;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG,EACxEH,KAAK,CAACK,QAAQ,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,WAAW,EAAE,KAAKC,QAAQ,CAACT,UAAU,CAAC,CAAC,CAACU,GAAG,CAAEC,aAAa,iBACjG,QAAC,WAAW;MAEV,KAAK,EAAEA,aAAa,CAACC,KAAM;MAC3B,KAAK,EAAED,aAAa,CAACE,KAAM;MAC3B,IAAI,EAAEF,aAAa,CAACJ;IAAK,GAHpBI,aAAa,CAACG,EAAE;MAAA;MAAA;MAAA;IAAA,QAKxB,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEb;AAAC,GA1BuBhB,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}